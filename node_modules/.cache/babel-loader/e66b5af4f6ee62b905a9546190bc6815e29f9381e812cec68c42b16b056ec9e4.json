{"ast":null,"code":"function dateTimeFormat(date, numberDayOfWeek) {\n  if (numberDayOfWeek === 1) {\n    const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\n      day: \"numeric\",\n      month: \"numeric\",\n      year: \"numeric\"\n    }).format(date);\n    return dateFormatter;\n  }\n  if (numberDayOfWeek > 1) {\n    // const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\n    //   day: \"numeric\",\n    //   month: \"numeric\",\n    //   year: \"numeric\",\n    // }).format(date.setDate(date.getDate + (i-1)))\n\n    // return dateFormatter.toString()\n  }\n}\nexport default dateTimeFormat;","map":{"version":3,"names":["dateTimeFormat","date","numberDayOfWeek","dateFormatter","Intl","DateTimeFormat","day","month","year","format"],"sources":["C:/Users/Zahar/Desktop/Task/frontend/src/utils/funcDateTimeFormat.js"],"sourcesContent":["function dateTimeFormat(date, numberDayOfWeek) {\r\n  if (numberDayOfWeek === 1) {\r\n    const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    }).format(date)\r\n\r\n    return dateFormatter\r\n  }\r\n\r\n  if (numberDayOfWeek > 1) {\r\n    // const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\r\n    //   day: \"numeric\",\r\n    //   month: \"numeric\",\r\n    //   year: \"numeric\",\r\n    // }).format(date.setDate(date.getDate + (i-1)))\r\n\r\n    // return dateFormatter.toString()\r\n  }\r\n}\r\n\r\nexport default dateTimeFormat\r\n"],"mappings":"AAAA,SAASA,cAAcA,CAACC,IAAI,EAAEC,eAAe,EAAE;EAC7C,IAAIA,eAAe,KAAK,CAAC,EAAE;IACzB,MAAMC,aAAa,GAAGC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MACjDC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC,CAAC,CAACC,MAAM,CAACR,IAAI,CAAC;IAEf,OAAOE,aAAa;EACtB;EAEA,IAAID,eAAe,GAAG,CAAC,EAAE;IACvB;IACA;IACA;IACA;IACA;;IAEA;EAAA;AAEJ;AAEA,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}