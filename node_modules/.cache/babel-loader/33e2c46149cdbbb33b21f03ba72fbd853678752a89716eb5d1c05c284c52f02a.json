{"ast":null,"code":"function rangeDate(start, end) {\n  const date = new Date();\n  const options = {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"2-digit\"\n  };\n  const arrDay = [];\n  for (let i = start; i < end; i++) {\n    if (i === start) {\n      arrDay.push(new Intl.DateTimeFormat(\"ru-Ru\", options).format(date));\n    }\n    if (i !== start) {\n      arrDay.push(new Intl.DateTimeFormat(\"ru-Ru\", options).format(date.setDate(date)));\n    }\n  }\n  return arrDay;\n}\nexport default rangeDate;","map":{"version":3,"names":["rangeDate","start","end","date","Date","options","weekday","day","month","year","arrDay","i","push","Intl","DateTimeFormat","format","setDate"],"sources":["C:/Users/Zahar/Desktop/Task/frontend/src/utils/rangeDate.js"],"sourcesContent":["function rangeDate(start, end) {\r\n  const date = new Date()\r\n  const options = {\r\n    weekday: \"long\",\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n    year: \"2-digit\",\r\n  }\r\n  const arrDay = []\r\n\r\n  for (let i = start; i < end; i++) {\r\n    if ((i === start)) {\r\n      arrDay.push(new Intl.DateTimeFormat(\"ru-Ru\", options).format(date))\r\n    }\r\n    if (i !== start) {\r\n        arrDay.push(new Intl.DateTimeFormat(\"ru-Ru\", options).format(\r\n            date.setDate(date)\r\n        ))\r\n    }\r\n  }\r\n\r\n  return arrDay\r\n}\r\n\r\nexport default rangeDate\r\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,MAAMC,OAAO,GAAG;IACdC,OAAO,EAAE,MAAM;IACfC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE;EACR,CAAC;EACD,MAAMC,MAAM,GAAG,EAAE;EAEjB,KAAK,IAAIC,CAAC,GAAGV,KAAK,EAAEU,CAAC,GAAGT,GAAG,EAAES,CAAC,EAAE,EAAE;IAChC,IAAKA,CAAC,KAAKV,KAAK,EAAG;MACjBS,MAAM,CAACE,IAAI,CAAC,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAET,OAAO,CAAC,CAACU,MAAM,CAACZ,IAAI,CAAC,CAAC;IACrE;IACA,IAAIQ,CAAC,KAAKV,KAAK,EAAE;MACbS,MAAM,CAACE,IAAI,CAAC,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAET,OAAO,CAAC,CAACU,MAAM,CACxDZ,IAAI,CAACa,OAAO,CAACb,IAAI,CACrB,CAAC,CAAC;IACN;EACF;EAEA,OAAOO,MAAM;AACf;AAEA,eAAeV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}