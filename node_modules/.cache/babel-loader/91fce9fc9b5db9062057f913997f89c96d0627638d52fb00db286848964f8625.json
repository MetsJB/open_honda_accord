{"ast":null,"code":"function dateTimeFormat(numberDayOfWeek) {\n  if (numberDayOfWeek === 1) {\n    const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\n      month: \"numeric\",\n      day: \"numeric\",\n      year: \"numeric\"\n    }).format(new Date());\n    return dateFormatter;\n  }\n  if (numberDayOfWeek > 1) {\n    const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\n      year: \"numeric\",\n      day: \"numeric\",\n      month: \"numeric\"\n    }).format(date);\n    return dateFormatter;\n  }\n}\nexport default dateTimeFormat;","map":{"version":3,"names":["dateTimeFormat","numberDayOfWeek","dateFormatter","Intl","DateTimeFormat","month","day","year","format","Date","date"],"sources":["C:/Users/Zahar/Desktop/Task/frontend/src/utils/funcDateTimeFormat.js"],"sourcesContent":["function dateTimeFormat(numberDayOfWeek) {\r\n  if (numberDayOfWeek === 1) {\r\n    const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\r\n      month: \"numeric\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    }).format(new Date())\r\n\r\n    return dateFormatter\r\n  }\r\n\r\n  if (numberDayOfWeek > 1) {\r\n    const dateFormatter = Intl.DateTimeFormat(\"en-RU\", {\r\n      year: \"numeric\",\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n    }).format(date)\r\n\r\n    return dateFormatter\r\n  }\r\n}\r\n\r\nexport default dateTimeFormat\r\n"],"mappings":"AAAA,SAASA,cAAcA,CAACC,eAAe,EAAE;EACvC,IAAIA,eAAe,KAAK,CAAC,EAAE;IACzB,MAAMC,aAAa,GAAGC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MACjDC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE;IACR,CAAC,CAAC,CAACC,MAAM,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAErB,OAAOP,aAAa;EACtB;EAEA,IAAID,eAAe,GAAG,CAAC,EAAE;IACvB,MAAMC,aAAa,GAAGC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;MACjDG,IAAI,EAAE,SAAS;MACfD,GAAG,EAAE,SAAS;MACdD,KAAK,EAAE;IACT,CAAC,CAAC,CAACG,MAAM,CAACE,IAAI,CAAC;IAEf,OAAOR,aAAa;EACtB;AACF;AAEA,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}